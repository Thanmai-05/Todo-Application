{"ast":null,"code":"var _jsxFileName = \"D:\\\\Exploding Kitten\\\\game\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Login from './login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /*const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [token, setToken] = useState('');\r\n    const handleRegister = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/register', { username, password });\r\n      alert('User registered successfully');\r\n      setPassword('')\r\n      setUsername('')\r\n    } catch (error) {\r\n      console.error('Registration failed', error.response.data.error);\r\n    }\r\n  };\r\n    const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', { username, password });\r\n      setToken(response.data.token);\r\n      alert('Login successful');\r\n      setUsername(\"\");\r\n      setPassword('');\r\n    } catch (error) {\r\n      setUsername('');\r\n      setPassword('');\r\n      alert('Invalid credentials', error.response.data.error);\r\n      console.error('Login failed', error.response.data.error);\r\n    }\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MERN Stack Authentication App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n{/*<div>\r\n  <h1>MERN Stack Authentication App</h1>\r\n    <label>Username: <input type=\"text\" value = {username} onChange={(e) => setUsername(e.target.value)} /></label><br></br>\r\n  <label>Password: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /></label><br></br>\r\n  <button onClick={handleRegister}>Register</button><br></br>\r\n  <button onClick={handleLogin}>Login</button>\r\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","BrowserRouter","Router","Routes","Route","Dashboard","Login","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["D:/Exploding Kitten/game/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router,Routes, Route} from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './login';\r\n\r\nfunction App() {\r\n  /*const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [token, setToken] = useState('');\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/register', { username, password });\r\n      alert('User registered successfully');\r\n      setPassword('')\r\n      setUsername('')\r\n    } catch (error) {\r\n      console.error('Registration failed', error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', { username, password });\r\n      setToken(response.data.token);\r\n      alert('Login successful');\r\n      setUsername(\"\");\r\n      setPassword('');\r\n    } catch (error) {\r\n      setUsername('');\r\n      setPassword('');\r\n      alert('Invalid credentials', error.response.data.error);\r\n      console.error('Login failed', error.response.data.error);\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n\r\n        <h1>MERN Stack Authentication App</h1>\r\n        <Routes>\r\n        <Route path=\"/login\">\r\n            <Login/>\r\n        </Route>\r\n\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard/>\r\n        </Route>\r\n      </Routes>\r\n      </div>\r\n    </Router>\r\n\r\n);\r\n}\r\n\r\nexport default App;\r\n    \r\n    {/*<div>\r\n      <h1>MERN Stack Authentication App</h1>\r\n\r\n      <label>Username: <input type=\"text\" value = {username} onChange={(e) => setUsername(e.target.value)} /></label><br></br>\r\n      <label>Password: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /></label><br></br>\r\n      <button onClick={handleRegister}>Register</button><br></br>\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div> */}\r\n    \r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,IAAIC,MAAM,EAACC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AACtE,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE,oBACED,OAAA,CAACN,MAAM;IAAAQ,QAAA,eACLF,OAAA;MAAAE,QAAA,gBAEEF,OAAA;QAAAE,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCN,OAAA,CAACL,MAAM;QAAAO,QAAA,gBACPF,OAAA,CAACJ,KAAK;UAACW,IAAI,EAAC,QAAQ;UAAAL,QAAA,eAChBF,OAAA,CAACF,KAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAERN,OAAA,CAACJ,KAAK;UAACW,IAAI,EAAC,YAAY;UAAAL,QAAA,eACtBF,OAAA,CAACH,SAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGb;AAACE,EAAA,GAjDQP,GAAG;AAmDZ,eAAeA,GAAG;AAEd,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,UANK;AAOS,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}