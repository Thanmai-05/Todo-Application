{"ast":null,"code":"var _jsxFileName = \"D:\\\\Exploding_Kitten_\\\\game\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    try {\n      await axios.post(\"http://localhost:5000/api/register\", {\n        username,\n        password\n      });\n      alert(\"User registered successfully\");\n      setPassword(\"\");\n      setUsername(\"\");\n    } catch (error) {\n      console.error(\"Registration failed\", error.response.data.error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\n        username,\n        password\n      });\n      setToken(response.data.token);\n      alert(\"Login successful\");\n      setUsername(\"xxx\");\n      setPassword(\"\");\n      navigate(\"/dashboard\", {\n        state: {\n          token: response.data.token\n        }\n      });\n    } catch (error) {\n      setUsername(\"\");\n      setPassword(\"\");\n      alert(\"Invalid credentials\", error.response.data.error);\n      console.error(\"Login failed\", error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"pyvdRTtp1Ysvd50/4jaRiAMFjrY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","token","setToken","navigate","handleRegister","post","alert","error","console","response","data","handleLogin","state","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Exploding_Kitten_/game/src/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/register\", {\r\n        username,\r\n        password,\r\n      });\r\n      alert(\"User registered successfully\");\r\n      setPassword(\"\");\r\n      setUsername(\"\");\r\n    } catch (error) {\r\n      console.error(\"Registration failed\", error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      setToken(response.data.token);\r\n      alert(\"Login successful\");\r\n      setUsername(\"xxx\");\r\n      setPassword(\"\");\r\n      navigate(\"/dashboard\", { state: { token: response.data.token } });\r\n    } catch (error) {\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      alert(\"Invalid credentials\", error.response.data.error);\r\n      console.error(\"Login failed\", error.response.data.error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {/*error && <p style={{ color: 'red' }}>{error}</p>*/}\r\n      <label>\r\n        Username:{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Password:{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </label>\r\n      <button onClick={handleRegister}>Register</button>\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}